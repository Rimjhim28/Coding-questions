class Solution {
    public int minFallingPathSum(int[][] A) {
        int n = A.length, i, j;
        int mem[][] = new int[n][n];
        for(i = 0; i < n; i++)
            mem[n-1][i] = A[n-1][i];
        for(i = n-2; i >= 0; i--) {
            for(j = 0; j < n; j++) {
                if(j == 0)
                    mem[i][j] = Math.min(A[i][j] + mem[i+1][j], A[i][j] + mem[i+1][j+1]);
                else if(j == n-1)
                    mem[i][j] = Math.min(A[i][j] + mem[i+1][j-1], A[i][j] + mem[i+1][j]);
                else 
                    mem[i][j] = Math.min(A[i][j] + mem[i+1][j], Math.min(A[i][j] + mem[i+1][j-1], A[i][j] + mem[i+1][j+1]));
            }
        }
        int min = Integer.MAX_VALUE;
        for(i = 0; i < n; i++) {
            if(mem[0][i] < min)
                min = mem[0][i];
        }
        return min;
    }
}
