/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    Set<Integer> to_delete_set;
    List<TreeNode> res;
    public List<TreeNode> delNodes(TreeNode root, int[] to_delete) {
        res = new ArrayList<>();
        to_delete_set = new HashSet<>();
        for(int i: to_delete)
            to_delete_set.add(i);
        helper(root, true);
        return res;
    }
    public TreeNode helper(TreeNode node, boolean is_root) {
        if(node == null) return null;
        boolean is_deleted = to_delete_set.contains(node.val);
        if(is_root && !is_deleted) res.add(node);
        node.left = helper(node.left, is_deleted);
        node.right = helper(node.right, is_deleted);
        return is_deleted? null: node;
    }
}
