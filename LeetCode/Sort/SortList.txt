/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode merge(ListNode a, ListNode b) {
        ListNode result = null;
        if(a == null) return b;
        if(b == null) return a;
        if(a.val < b.val) {
            result = a;
            result.next = merge(a.next, b);
        } else {
            result = b;
            result.next = merge(a, b.next);
        }
        return result;
    }
    
    public ListNode getMiddle(ListNode h) {
        if(h == null) return h;
        ListNode slow = h, fast = h.next;
        while(fast != null) {
            fast = fast.next;
            if(fast != null) {
                fast = fast.next;
                slow = slow.next;
            }
        }
        return slow;
    }
    public ListNode sortList(ListNode head) {
        if(head == null || head.next == null) return head;
        ListNode middle = getMiddle(head);
        ListNode nextMiddle = middle.next;
        middle.next = null;
        ListNode left = sortList(head);
        ListNode right = sortList(nextMiddle);
        ListNode sorted = merge(left, right);
        return sorted;
    }
}
