/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head == null || head.next == null) 
            return null;
        ListNode p1 = head, p2 = head;
        
        do {
            if(p2 == null || p2.next == null) 
                return null;
            p1 = p1.next;
            p2 = p2.next.next;
        } while(p1 != p2);
        
        p1 = head;
        while(p1 != p2) {
            p1 = p1.next;
            p2 = p2.next;
        }
        return p2;
    }
}
