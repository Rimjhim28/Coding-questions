class Solution {
    public int maxTurbulenceSize(int[] A) {
        int n = A.length, i, j, ans = 1, d;
        int c[] = new int[n-1];
        for(i = 1; i < n; i++) {
            if(A[i] > A[i-1])
                c[i-1] = 1;
            else if(A[i] < A[i-1])
                c[i-1] = -1;
            else
                c[i-1] = 0;
        }
        i = 0; j = 0;
        while(i < n-1) {
            while(i+1 < n-1 && (c[i] == c[i+1] || c[i] == 0)) 
                ++i;
            j = i;
            while(j+1 < n-1 && c[j] != c[j+1] && c[j+1] != 0)
                ++j;
            d = j-i+1;
            if((i==j && c[j]!=0) || (i!=j))
                d+=1;
            ans = Math.max(ans, d);
            i = j+1;
        }
        return ans;
    }
}
