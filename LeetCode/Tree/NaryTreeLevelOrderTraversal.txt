/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> res = new ArrayList<>();
        traverse(root, 0, res);
        return res;
    }
    
    public void traverse(Node node, int level, List<List<Integer>> res) {
        if(node == null) return;
        if(level < res.size())
            res.get(level).add(node.val);
        else {
            res.add(new ArrayList<Integer>());
            res.get(level).add(node.val);
        }
        for(Node n: node.children)
            traverse(n, level+1, res);
    }
}
