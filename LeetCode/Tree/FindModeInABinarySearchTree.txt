/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int count = 0, maxCount = 0, currVal, modeCount = 0;
    int[] modes;
    public int[] findMode(TreeNode root) {
        traverse(root);
        modes = new int[modeCount];
        modeCount = 0;
        count = 0;
        traverse(root);
        return modes;
    }
    
    public void handleValue(int val) {
        if(val != currVal) {
            currVal = val;
            count = 0;
        }
        count++;
        if(count > maxCount) {
            maxCount = count;
            modeCount = 1;
        } else if(count == maxCount) {
            if(modes != null)
                modes[modeCount] = currVal;
            modeCount++;
        }
    }
    
    public void traverse(TreeNode node) {
        if(node != null) {
            traverse(node.left);
            handleValue(node.val);
            traverse(node.right);
        }
    }
   
}
