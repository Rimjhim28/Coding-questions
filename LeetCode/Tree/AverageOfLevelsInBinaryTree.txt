/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res = new ArrayList<>();
        List<Integer> count = new ArrayList<>();
        getAverage(root, 0, res, count);
        for(int i = 0; i < res.size(); i++)
            res.set(i, (res.get(i)/count.get(i)));
        return res;
    }
    
    public void getAverage(TreeNode node, int i, List<Double> sum, List<Integer> count) {
        if(node == null) return;
        if(i < sum.size()) {
            sum.set(i, sum.get(i) + node.val);
            count.set(i, count.get(i) + 1);
        } else {
            sum.add(1.0 * node.val);
            count.add(1);
        }
        getAverage(node.left, i+1, sum, count);
        getAverage(node.right, i+1, sum, count);
    }
}
