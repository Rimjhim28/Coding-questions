/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    boolean a = false;
    public boolean isSubtree(TreeNode s, TreeNode t) {
        if(t == null) return true;
        if(s == null) return false;
        if(s.val == t.val)
            a = checkTree(s, t);
        return a || isSubtree(s.right, t) || isSubtree(s.left, t);
    }
    public boolean checkTree(TreeNode s, TreeNode t) {
        if(s == null && t == null) return true;
        if(s == null || t == null) return false;
        if(s.val != t.val) return false;
        return (s.val == t.val) && checkTree(s.left, t.left) && checkTree(s.right, t.right); 
    }
}
