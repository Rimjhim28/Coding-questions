class Solution {
    public List<String> findAndReplacePattern(String[] words, String pattern) {
        List<String> ans = new ArrayList();
        for(String word: words) {
            if(match(word, pattern))
                ans.add(word);
        }
        return ans;
    }
    public boolean match(String word, String pattern) {
        Map<Character, Character> mp = new HashMap();
        for(int i = 0; i < word.length(); i++) {
            char w = word.charAt(i);
            char p = pattern.charAt(i);
            if(!mp.containsKey(w))
                mp.put(w, p);
            if(mp.get(w) != p)
                return false;
        }
        boolean seen[] = new boolean[26];
        for(char p: mp.values()) {
            if(seen[p - 'a'])
                return false;
            seen[p - 'a'] = true;
        }
        return true;
    }
}
