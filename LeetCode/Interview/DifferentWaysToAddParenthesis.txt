class Solution {
    Map<String, List<Integer>> map = new HashMap<>();
    public List<Integer> diffWaysToCompute(String input) {
        List<Integer> res = new ArrayList<>();
        for(int i = 0; i < input.length(); i++) {
            char c = input.charAt(i);
            if(c == '+' || c == '-' || c =='*') {
                String s1 = input.substring(0, i);
                String s2 = input.substring(i+1);
                List<Integer> l1 = map.getOrDefault(s1, diffWaysToCompute(s1));
                List<Integer> l2 = map.getOrDefault(s2, diffWaysToCompute(s2));
                for(int j = 0; j < l1.size(); j++) {
                    for(int k = 0; k < l2.size(); k++) {
                        int ans = 0;
                        switch(c) {
                            case '+': ans = l1.get(j) + l2.get(k); break;
                            case '-': ans = l1.get(j) - l2.get(k); break;
                            case '*': ans = l1.get(j) * l2.get(k); break;
                        }
                        res.add(ans);
                    }
                }
            }
        }
        if(res.size() == 0)
            res.add(Integer.valueOf(input));
        map.put(input, res);
        return res;
    }
}