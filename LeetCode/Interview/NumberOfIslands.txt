class Solution {
    
    boolean visited[][];
    char grid[][];
    int dir[][];
    
    public int numIslands(char[][] grid) {
        if(grid == null || grid.length == 0) return 0;
        int count = 0;
        this.grid = grid;
        this.visited = new boolean[grid.length][grid[0].length];
        this.dir = new int[][]{{0,1},{0,-1},{1,0},{-1,0}};
        for(int i = 0; i < grid.length; i++) {
            for(int j = 0; j < grid[0].length; j++) {
                if(grid[i][j] == '1' && visited[i][j] == false) {
                    traverse(i ,j);
                    ++count;
                }                
            }
        }
        return count;
    }
    
    public void traverse(int i, int j) {
        for(int d[]: dir) {
            int x = i + d[0];
            int y = j + d[1];
            if(x >= 0 && x < grid.length && y >= 0 && y < grid[0].length && grid[x][y] == '1' && visited[x][y] == false) {
                visited[x][y] = true;
                traverse(x,y);
            }
        }
    }
}