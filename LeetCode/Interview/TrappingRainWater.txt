class Solution {
    public int trap(int[] height) {
        /**
        1. Next Greater Element - Stack (Indexes) 
        2. Calculate
        */        
        Stack<Integer> st = new Stack<>();
        int res = 0;
        for(int i = 0; i < height.length; i++) {
            while(!st.isEmpty() && height[st.peek()] < height[i]) {
                int top = st.peek();
                st.pop();
                if(st.isEmpty()) break;
                int d = i - st.peek() - 1;
                int bounded = Math.min(height[i], height[st.peek()]) - height[top];
                res += d * bounded;
            }
            st.push(i);
        }
        return res;
    }
}